/* soapcalcProxy.h
   Generated by gSOAP 2.7.9l from calc.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapcalcProxy_H
#define soapcalcProxy_H
#include "soapH.h"

class SOAP_CMAC calcProxy : public soap
{ public:
	/// Endpoint URL of service 'calcProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	calcProxy();
	/// Constructor with engine input+output mode control
	calcProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	calcProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~calcProxy();
	/// Initializer used by constructor
	virtual	void calcProxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Web service operation 'add' (return error code or SOAP_OK)
	virtual	int add(double a, double b, double &result);
	/// Web service operation 'sub' (return error code or SOAP_OK)
	virtual	int sub(double a, double b, double &result);
	/// Web service operation 'mul' (return error code or SOAP_OK)
	virtual	int mul(double a, double b, double &result);
	/// Web service operation 'div' (return error code or SOAP_OK)
	virtual	int div(double a, double b, double &result);
	/// Web service operation 'pow' (return error code or SOAP_OK)
	virtual	int pow(double a, double b, double &result);
};
#endif
